[
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Mini Project #1: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "",
    "text": "The major United States public transit systems contribute significantly to individuals daily transportation, allowing commuters alternative and often more affordable transit options for commutes. The goal of this project is to explore different characteristics of the major transit systems in the United States, based on data from the National Transit Database. More specifically, the analysis includes data from the 2022 Fare Revenue table, the most recent Monthly Ridership table, and the 2022 Operating Expenses reports. This report intends to consider various statistics including farebox recovery, ridership, total trips, total vehicle miles traveled, total revenues and expenses for various locations and transit agencies, to analyze the performance of these transit systems over time. Ultimately, the analysis of certain metrics will assist in determining the most efficient transit system in the United States."
  },
  {
    "objectID": "mp01.html#introduction",
    "href": "mp01.html#introduction",
    "title": "Mini Project #1: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "",
    "text": "The major United States public transit systems contribute significantly to individuals daily transportation, allowing commuters alternative and often more affordable transit options for commutes. The goal of this project is to explore different characteristics of the major transit systems in the United States, based on data from the National Transit Database. More specifically, the analysis includes data from the 2022 Fare Revenue table, the most recent Monthly Ridership table, and the 2022 Operating Expenses reports. This report intends to consider various statistics including farebox recovery, ridership, total trips, total vehicle miles traveled, total revenues and expenses for various locations and transit agencies, to analyze the performance of these transit systems over time. Ultimately, the analysis of certain metrics will assist in determining the most efficient transit system in the United States."
  },
  {
    "objectID": "mp01.html#data-cleaning",
    "href": "mp01.html#data-cleaning",
    "title": "Mini Project #1: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Data Cleaning",
    "text": "Data Cleaning\nBefore starting the analysis, the relevant data files need to be loaded and cleaned into data frames on R. Below consists of the code required to download the data files and create the relevant data frames by merging different tables. From the original data files four data frames are created: FARES, EXPENSES, TRIPS, and MILES. Following this, FARES and EXPENSES are merged into the FINANCIALS data frame and TRIPS and MILES are merged into the USAGE data frame. From this point forward, only the USAGE and FINANCIALS data frames will be necessary to conduct the analysis.\n\nif(!require(\"dplyr\")) install.packages(\"dplyr\")\n\nLoading required package: dplyr\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dplyr)\n\n\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\n\nLoading required package: tidyverse\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.1     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Let's start with Fare Revenue\nlibrary(tidyverse)\nif(!file.exists(\"2022_fare_revenue.xlsx\")){\n    # This should work _in theory_ but in practice it's still a bit finicky\n    # If it doesn't work for you, download this file 'by hand' in your\n    # browser and save it as \"2022_fare_revenue.xlsx\" in your project\n    # directory.\n    download.file(\"http://www.transit.dot.gov/sites/fta.dot.gov/files/2024-04/2022%20Fare%20Revenue.xlsx\", \n                  destfile=\"2022_fare_revenue.xlsx\", \n                  quiet=FALSE, \n                  method=\"wget\")\n}\nFARES &lt;- readxl::read_xlsx(\"2022_fare_revenue.xlsx\") |&gt;\n    select(-`State/Parent NTD ID`, \n           -`Reporter Type`,\n           -`Reporting Module`,\n           -`TOS`,\n           -`Passenger Paid Fares`,\n           -`Organization Paid Fares`) |&gt;\n    filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n    select(-`Expense Type`) |&gt;\n    group_by(`NTD ID`,       # Sum over different `TOS` for the same `Mode`\n             `Agency Name`,  # These are direct operated and sub-contracted \n             `Mode`) |&gt;      # of the same transit modality\n                             # Not a big effect in most munis (significant DO\n                             # tends to get rid of sub-contractors), but we'll sum\n                             # to unify different passenger experiences\n    summarize(`Total Fares` = sum(`Total Fares`)) |&gt;\n    ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency Name'. You can override\nusing the `.groups` argument.\n\n# Next, expenses\nif(!file.exists(\"2022_expenses.csv\")){\n    # This should work _in theory_ but in practice it's still a bit finicky\n    # If it doesn't work for you, download this file 'by hand' in your\n    # browser and save it as \"2022_expenses.csv\" in your project\n    # directory.\n    download.file(\"https://data.transportation.gov/api/views/dkxx-zjd6/rows.csv?date=20231102&accessType=DOWNLOAD&bom=true&format=true\", \n                  destfile=\"2022_expenses.csv\", \n                  quiet=FALSE, \n                  method=\"wget\")\n}\nEXPENSES &lt;- readr::read_csv(\"2022_expenses.csv\") |&gt;\n    select(`NTD ID`, \n           `Agency`,\n           `Total`, \n           `Mode`) |&gt;\n    mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n    rename(Expenses = Total) |&gt;\n    group_by(`NTD ID`, `Mode`) |&gt;\n    summarize(Expenses = sum(Expenses)) |&gt;\n    ungroup()\n\nRows: 3744 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): Agency, City, State, NTD ID, Organization Type, Reporter Type, UZA...\ndbl  (2): Report Year, UACE Code\nnum (10): Primary UZA Population, Agency VOMS, Mode VOMS, Vehicle Operations...\nlgl  (7): Vehicle Operations Questionable, Vehicle Maintenance Questionable,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n`summarise()` has grouped output by 'NTD ID'. You can override using the `.groups` argument.\n\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n\n\n# Monthly Transit Numbers\nlibrary(tidyverse)\nif(!file.exists(\"ridership.xlsx\")){\n    # This should work _in theory_ but in practice it's still a bit finicky\n    # If it doesn't work for you, download this file 'by hand' in your\n    # browser and save it as \"ridership.xlsx\" in your project\n    # directory.\n    download.file(\"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-09/July%202024%20Complete%20Monthly%20Ridership%20%28with%20adjustments%20and%20estimates%29_240903.xlsx\", \n                  destfile=\"ridership.xlsx\", \n                  quiet=FALSE, \n                  method=\"wget\")\n}\nTRIPS &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"UPT\") |&gt;\n            filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n            select(-`Legacy NTD ID`, \n                   -`Reporter Type`, \n                   -`Mode/Type of Service Status`, \n                   -`UACE CD`, \n                   -`TOS`) |&gt;\n            pivot_longer(-c(`NTD ID`:`3 Mode`), \n                            names_to=\"month\", \n                            values_to=\"UPT\") |&gt;\n            drop_na() |&gt;\n            mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nMILES &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"VRM\") |&gt;\n            filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n            select(-`Legacy NTD ID`, \n                   -`Reporter Type`, \n                   -`Mode/Type of Service Status`, \n                   -`UACE CD`, \n                   -`TOS`) |&gt;\n            pivot_longer(-c(`NTD ID`:`3 Mode`), \n                            names_to=\"month\", \n                            values_to=\"VRM\") |&gt;\n            drop_na() |&gt;\n            group_by(`NTD ID`, `Agency`, `UZA Name`, \n                     `Mode`, `3 Mode`, month) |&gt;\n            summarize(VRM = sum(VRM)) |&gt;\n            ungroup() |&gt;\n            mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'UZA Name', 'Mode', '3\nMode'. You can override using the `.groups` argument.\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n    mutate(`NTD ID` = as.integer(`NTD ID`))\n\nJoining with `by = join_by(`NTD ID`, Agency, `UZA Name`, Mode, `3 Mode`,\nmonth)`\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe code below checks for possible lingering null values in the USAGE and FINANCIALS data frames before conducting analysis. An output of 0 for each of the data frames ensures that there are no null values in these data frames.\n\nUSAGE |&gt;\n  is.na() |&gt;\n  sum()\n\n[1] 0\n\n\n\nFINANCIALS |&gt;\n  is.na() |&gt;\n  sum()\n\n[1] 0\n\n\n\nSince, both of these chunks produced an output of 0, there are no null values in these data tables that may alter calculations and analysis in the future.\n\n\nThe USAGE table (shown below) provides transit system information including (but not limited to): agency, mode of transportation, total unlinked passenger trips, and total vehicle revenue miles.\n\nif(!require(\"DT\")) install.packages(\"DT\")\n\nLoading required package: DT\n\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n  mutate(month=as.character(month)) |&gt; \n  arrange(`NTD ID`, month) |&gt;\n  DT::datatable(rownames = FALSE, \n                options = list(pageLength = 5))"
  },
  {
    "objectID": "mp01.html#data-transformation",
    "href": "mp01.html#data-transformation",
    "title": "Mini Project #1: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Data Transformation",
    "text": "Data Transformation\nPrior to analyzing data, it is important to make data tables as clear as possible to ensure clarity and accurate interpretation of results. So, renaming the column UZA Name to metro_area clarifies that this column contains the location (city, state) of the transit systems.\n\nUSAGE &lt;- USAGE |&gt; \n  rename(metro_area = 'UZA Name')\n\nAdditionally, the Mode column contains some abbreviated codes, so converting these codes into understandable terms is helpful for future analysis.\n\n\n\n\n\n\nNote\n\n\n\n\nThe code below is used help to streamline the process of converting the codes into the terms, by showing the unique codes in the Mode column. Ultimately making the process of searching for these terms in the National Transit Database (NTD) Glossary much more efficient.\n\nunique(USAGE$Mode)\n\n [1] \"DR\" \"FB\" \"MB\" \"SR\" \"TB\" \"VP\" \"CB\" \"RB\" \"LR\" \"YR\" \"MG\" \"CR\" \"AR\" \"TR\" \"HR\"\n[16] \"IP\" \"PB\" \"CC\"\n\n\n\n\n\n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode = case_when(\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"SR\" ~ \"Streetcar\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway Transit\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"\n  ))\n\nFurthermore, to clean up the data table even more, the removal of columns NTD ID and 3 Mode could help clear unnecessary information before analysis. Renaming certain columns like UPT and VRM to unlinked_passenger_trips and vehicle_revenue_miles will also provide more clarity for interpretation. For this, a new data table USAGE_clean is created, shown below.\n\nUSAGE_clean &lt;- USAGE |&gt; \n  select(-`NTD ID`, -`3 Mode`) |&gt; \n  rename(unlinked_passenger_trips = UPT, vehicle_revenue_miles = VRM)\n\nsample_n(USAGE_clean, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable(rownames = FALSE,\n                  options = list(pageLength = 5))"
  },
  {
    "objectID": "mp01.html#ridership-analysis",
    "href": "mp01.html#ridership-analysis",
    "title": "Mini Project #1: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Ridership Analysis",
    "text": "Ridership Analysis\n\n\n\n\n\n\nPreliminary Analysis:\n\n\n\nBelow are some preliminary questions to explore the USAGE_clean data table:\n\nWhat transit agency had the most total VRM in our data set?\nWhat transit mode had the most total VRM in our data set?\nHow many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\nHow much did NYC subway ridership fall between April 2019 and April 2020?\n\n\n\n\nQuestion #1\n\ntransit_agency_max_total_VRM &lt;- \n  USAGE_clean |&gt;\n  group_by(Agency) |&gt;\n  summarize(total_VRM = sum(vehicle_revenue_miles)) |&gt;\n  slice_max(total_VRM, n = 1) |&gt;\n  pull(Agency)\n\ntransit_agency_max_total_VRM\n\n[1] \"MTA New York City Transit\"\n\ntransit_agency_max_total_VRM_dist &lt;- \n  USAGE_clean |&gt;\n  group_by(Agency) |&gt;\n  summarize(total_VRM = sum(vehicle_revenue_miles)) |&gt;\n  slice_max(total_VRM, n = 1) |&gt;\n  pull(total_VRM)\n\ntransit_agency_max_total_VRM_dist\n\n[1] 10832855350\n\n\nThe transit agency that had the most total vehicle revenue miles in the sample was MTA New York City Transit, with a total of about 10.83 billion vehicle revenue miles. Being that the MTA New York City Transit is one of the largest transit systems in the entire world and the largest in the US, it is unsurprising that this transit agency had the most total VRM in the data set.\n\n\nQuestion #2\n\ntransit_mode_max_total_VRM &lt;- \n  USAGE_clean |&gt;\n  group_by(Mode) |&gt;\n  summarize(total_VRM = sum(vehicle_revenue_miles)) |&gt;\n  slice_max(total_VRM, n = 1) |&gt;\n  pull(Mode)\n\ntransit_mode_max_total_VRM\n\n[1] \"Bus\"\n\ntransit_mode_max_total_VRM_dist &lt;- \n  USAGE_clean |&gt;\n  group_by(Mode) |&gt;\n  summarize(total_VRM = sum(vehicle_revenue_miles)) |&gt;\n  slice_max(total_VRM, n = 1) |&gt;\n  pull(total_VRM)\n\ntransit_mode_max_total_VRM_dist\n\n[1] 49444494088\n\n\nThe transit mode with the most total vehicle revenue miles in this sample was the Bus, having a total of roughly 49.44 billion vehicle revenue miles. Buses make up a large portion of public transportation, especially in cities that don’t have heavy rail trains like NYC, so it is reasonable that buses had the most vehicle revenue miles.\n\n\nQuestion #3\n\nif(!require(\"lubridate\")) install.packages(\"lubridate\")\nlibrary(lubridate)\n\ntotal_trips_NYC_subway_2024 &lt;- USAGE_clean |&gt;\n  filter(Agency == \"MTA New York City Transit\", \n         Mode == \"Heavy Rail\", \n         year(month) == 2024) |&gt;\n  group_by(mon = month(month)) |&gt;\n  summarize(total_trips = sum(unlinked_passenger_trips))\n\ntotal_trips_NYC_subway_2024\n\n# A tibble: 7 × 2\n    mon total_trips\n  &lt;dbl&gt;       &lt;dbl&gt;\n1     1   157917292\n2     2   155722143\n3     3   172235628\n4     4   171458466\n5     5   180458819\n6     6   159891215\n7     7   161133245\n\ntotal_trips_NYC_subway &lt;- total_trips_NYC_subway_2024 |&gt;\n  filter(mon == 5) |&gt;\n  pull(total_trips)\n\nThere were about 180.46 million total trips taken on the New York City Subway in May 2024. From the data table total_trips_NYC_subway_2024, it is evident that the average monthly ridership from January 2024 to April 2024, was less than the total trips in May 2024. This could be due to the season change, as the weather gets warmer from Winter into the Spring.\n\n\nQuestion #4\n\nridership_drop_NYC_april &lt;- USAGE_clean |&gt;\n  filter(Agency == \"MTA New York City Transit\", Mode == \"Heavy Rail\", month(month)==4) |&gt;\n  filter((year(month)==2019) | (year(month)==2020)) |&gt;\n  group_by(year = year(month)) |&gt;\n  summarize(total_ridership = sum(unlinked_passenger_trips)) |&gt;\n  arrange(year) |&gt;\n  summarize(ridership_drop = first(total_ridership)-last(total_ridership)) |&gt;\n  pull(ridership_drop)\n\nridership_drop_NYC_april\n\n[1] 211969660\n\n\nFrom April 2019 to April 2020, the NYC subway ridership fell by approxmately 211.97 million. The drastic drop in NYC subway ridership was likely due to the COVID-19 global pandemic which forced everyone to remain indoors and socially distance from others. So, it is understandable that such an extreme drop of 211.97 million occurred.\nAfter analyzing the above statistics from the monthly ridership table, I wanted to find some additional information on the possible impact of COVID-19 on transit system ridership in the US.\n\n\nTransit System Patterns Before and During COVID-19 Analysis\nSeveral years ago, in 2020, the world experienced a global outbreak of COVID-19, impacting local and international economies. This event encouraged social distancing and prevented any significant travel for citizens besides essential workers. I was curious to see how our national transit systems were affected by this global event. More specifically, I wanted to explore the ridership changes for the various metro areas included in the national ridership data set. I created a data frame with the total ridership of each metro area in this time frame, then calculated the percent change of ridership from 2019 to 2020. I expected to find a decrease in ridership in all the cities from 2019 to 2020 and wanted to explore which cities were negatively impacted the most and least.\n\nridership_by_area_2019 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2019) |&gt;\n  group_by(metro_area) |&gt;\n  summarize(total_ridership = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nridership_by_area_2020 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2020) |&gt;\n  group_by(metro_area) |&gt;\n  summarize(total_ridership = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nridership_2019_2020 &lt;- left_join(ridership_by_area_2019, ridership_by_area_2020, join_by(metro_area)) |&gt;\n  rename(total_ridership_2019 = total_ridership.x, total_ridership_2020 = total_ridership.y) |&gt;\n  mutate(change_in_ridership = total_ridership_2020-total_ridership_2019, percent_change = round(((change_in_ridership / total_ridership_2019) * 100), digits = 2), decrease = (percent_change &lt; 0))\n\n\nridership_2019_2020 |&gt; \n    DT::datatable(rownames = FALSE)\n\n\n\n\n\n\nGreatest Decrease in Ridership from 2019-2020\n\ngreatest_ridership_drop_place &lt;- ridership_2019_2020 |&gt;\n  slice_min(percent_change, n=1) |&gt;\n  pull(metro_area)\n\ngreatest_ridership_drop_percent &lt;- ridership_2019_2020 |&gt;\n  slice_min(percent_change, n=1) |&gt;\n  pull(percent_change)\n\ngreatest_ridership_drop_place\n\n[1] \"Rome, GA\"\n\ngreatest_ridership_drop_percent\n\n[1] -91.56\n\n\nAfter looking through the data, I found that the city with the greatest ridership drop from 2019 to 2020 was Rome, GA with a percentage change of -91.56%.\nFurthermore, I wanted to explore more about the ridership in Rome, GA and analyze the breakdown of ridership by mode of transportation.\n\nridership_Rome_GA_2019 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2019, metro_area == \"Rome, GA\") |&gt;\n  group_by(Mode) |&gt;\n  summarize(total_ridership = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nridership_Rome_GA_2020 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2020, metro_area == \"Rome, GA\") |&gt;\n  group_by(Mode) |&gt;\n  summarize(total_ridership = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nridership_Rome_GA_2019_2020 &lt;- left_join(ridership_Rome_GA_2019, ridership_Rome_GA_2020, join_by(Mode)) |&gt;\n  rename(total_ridership_2019 = total_ridership.x, total_ridership_2020 = total_ridership.y) |&gt;\n  mutate(change_in_ridership = total_ridership_2020-total_ridership_2019, percent_change = round(((change_in_ridership / total_ridership_2019) * 100), digits = 2), decrease = (percent_change &lt; 0))\n\nridership_Rome_GA_2019_2020 |&gt;\n  DT::datatable(rownames = FALSE)\n\n\n\n\n\nFrom this table above, there were only two recorded modes of transportation from Rome, GA: bus and demand response. The bus ridership changed by -92.75%, while the demand response ridership changed by -36.57%. The sharp decline in bus ridership could be due to the fear of taking public mass transit. Individuals needing to travel locally would probably have preferred utilizing personal vehicles. Overall, the decrease in ridership was typical for majority of metropolitan areas with transit systems.\n\n\nExploring Peculiar Increases in Ridership from 2019-2020\nSubsequently, I was also curious to see which city was affected the least. When exploring this question, contrary to my assumption, there were a few cities that actually increased their ridership from 2019 to 2020.\n\npositive_change &lt;- ridership_2019_2020 |&gt;\n  filter(decrease == FALSE) |&gt;\n  arrange(desc(percent_change))\n\npositive_change_cities &lt;- positive_change$metro_area\n\npositive_change_cities\n\n[1] \"Victoria, TX\"       \"Port St. Lucie, FL\" \"Las Cruces, NM\"    \n\n\nThe cities that presumably increased their ridership from 2019 to 2020 were Victoria, TX, Port St. Lucie, FL, Las Cruces, NM.\n\n\n\n\n\n\nImportant\n\n\n\nAlthough finding an increase in ridership from 2019 to 2020 is not entirely impossible, it was probably unlikely to occur. So, it was important to do additional investigation to figure out why these calculations came out to be positive.\n\n\nUpon further review of the data for Victoria, TX, it is apparent that no data was collected between January 2019 to August 2019, causing the total ridership for 2019 to be significantly lower than the totals from 2020.\n\ntx_2019 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2019, \n         metro_area == \"Victoria, TX\") |&gt;\n  group_by(month) |&gt;\n  summarize(total_UPT = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\ntx_2020 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2020, \n         metro_area == \"Victoria, TX\") |&gt;\n  group_by(month) |&gt;\n  summarize(total_UPT = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\ntx_combined &lt;- full_join(tx_2019, tx_2020) |&gt;\n  mutate(year = year(month),\n         mon = month(month)) |&gt;\n  select(-month) |&gt;\n  pivot_wider(id_cols = c(mon),\n              names_from = year,\n              values_from = total_UPT) |&gt;\n  arrange(mon)\n\nJoining with `by = join_by(month, total_UPT)`\n\ntx_combined |&gt;\n  DT::datatable(rownames = FALSE)\n\n\n\n\n\n\ntx_2019_total &lt;- tx_combined$`2019` |&gt;\n  replace(is.na(tx_combined$`2019`), 0) |&gt;\n  sum()\n\ntx_2019_total\n\n[1] 107199\n\ntx_2020_total &lt;- tx_combined$`2020` |&gt;\n  sum()\n\ntx_2020_total\n\n[1] 269979\n\n\nThe total for Victoria, TX in 2019 was 107,199 compared to 2020 with a total of 269,979, a significant difference due to the missing data from 2019. Being that the information for 2019 is not entirely accessible, it is inconclusive whether the ridership in Victoria, TX increased or decreased from 2019 to 2020.\nContrary to Victoria, TX, the data for Las Cruces, NM was not nearly as drastic. Although, there seems to be an unexpected value for the total ridership in January 2019.\n\nnm_2019 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2019, \n         metro_area == \"Las Cruces, NM\") |&gt;\n  group_by(month) |&gt;\n  summarize(total_UPT = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nnm_2020 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2020, \n         metro_area == \"Las Cruces, NM\") |&gt;\n  group_by(month) |&gt;\n  summarize(total_UPT = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nnm_combined &lt;- full_join(nm_2019, nm_2020) |&gt;\n  mutate(year = year(month),\n         mon = month(month)) |&gt;\n  select(-month) |&gt;\n  pivot_wider(id_cols = c(mon),\n              names_from = year,\n              values_from = total_UPT)\n\nJoining with `by = join_by(month, total_UPT)`\n\nnm_combined |&gt;\n  DT::datatable(rownames = FALSE)\n\n\n\n\n\n\njan_2019_nm &lt;- nm_combined |&gt;\n  filter(mon == 1) |&gt;\n  pull(`2019`)\n\nnm_combined_no_jan &lt;- nm_combined |&gt;\n  filter(mon != 1)\n\nnm_2019_min &lt;- nm_combined_no_jan$`2019` |&gt;\n  min()\n\nnm_2019_max &lt;- nm_combined_no_jan$`2019` |&gt;\n  max()\n\nFrom the table above, Las Cruces, NM, experienced a total ridership of 532 in January 2019, which seems highly unlikely given that the range of values for the remainder of 2019 were between 4,510 and 9,544. Observing the remaining data points, there’s a general increase in ridership from January 2019 until about January 2020. The Las Cruces, NM metro area experiences a steep ridership drop in April 2020, right around the peak of the pandemic. Overall, it seems that the ridership from January 2019 may have been undercounted, so it is unclear whether Las Cruces, NM experienced an increase or decrease in ridership from 2019 to 2020.\nLastly, for Port St. Lucie, FL, there is less of a concern for the 2019 data as the monthly ridership totals seem to fluctuate in the range of 14,000 to 18,000. However, in 2020, there is a noticeable increase in ridership in October 2020.\n\nfl_2019 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2019, \n         metro_area == \"Port St. Lucie, FL\") |&gt;\n  group_by(month) |&gt;\n  summarize(total_UPT = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nfl_2020 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2020, \n         metro_area == \"Port St. Lucie, FL\") |&gt;\n  group_by(month) |&gt;\n  summarize(total_UPT = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nfl_combined &lt;- full_join(fl_2019, fl_2020) |&gt;\n  mutate(year = year(month),\n         mon = month(month)) |&gt;\n  select(-month) |&gt;\n  pivot_wider(id_cols = c(mon),\n              names_from = year,\n              values_from = total_UPT)\n\nJoining with `by = join_by(month, total_UPT)`\n\nfl_combined |&gt;\n  DT::datatable(rownames = FALSE)\n\n\n\n\n\n\nsept_2020_fl &lt;- fl_combined |&gt;\n  filter(mon == 9) |&gt;\n  pull(`2020`)\n\noct_2020_fl &lt;- fl_combined |&gt;\n  filter(mon == 10) |&gt;\n  pull(`2020`)\n\nfl_increase &lt;- oct_2020_fl - sept_2020_fl\n\nfl_increase_percent &lt;- round((fl_increase / sept_2020_fl) * 100, digits = 0)\n\nIn September 2020, Port St. Lucie, FL experienced a ridership total of 6,883. In only one month, Port St. Lucie, FL increased its ridership by 43,535 (or 633%) to a total ridership in October 2020 of 50,418. While this seems a little unbelievable, it is possible that during the latter part of 2020, people were beginning to travel domestically again. Perhaps more people were fleeing bigger urban areas for smaller cities like Port St. Lucie, FL causing a spike in ridership in October 2020 and beyond. This case seems more reasonable, especially since the ridership in Port St. Lucie, FL after October 2020 maintained this high total ridership fluctuating between 46,000 and 52,000 UPT.\nAlthough in most cases, it is unlikely that ridership would have increased from 2019 to 2020, it is possible that certain, more suburban, areas could have had an increase in ridership. One possibility is that people wanted to relocate from more densely populated cities into smaller cities, when travel became more accessible, causing an increase in ridership in cities like Port St. Lucie, FL.\n\n\nNew York City Transit During COVID-19\nAside from the above three cities, the large majority of US city transit systems experienced a decrease in ridership. Being that New York City has the largest transit system in the United States, the Metropolitan Transit Authority (MTA), I was curious to further analyze the changes the city’s transit system experienced from 2019 to 2020.\n\nridership_NYC_2019 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2019, Agency == \"MTA New York City Transit\") |&gt;\n  group_by(Mode) |&gt;\n  summarize(total_ridership = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nridership_NYC_2020 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2020, Agency == \"MTA New York City Transit\") |&gt;\n  group_by(Mode) |&gt;\n  summarize(total_ridership = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nridership_NYC_2019_2020 &lt;- left_join(ridership_NYC_2019, ridership_NYC_2020, join_by(Mode)) |&gt;\n  rename(total_ridership_2019 = total_ridership.x, total_ridership_2020 = total_ridership.y) |&gt;\n  mutate(change_in_ridership = total_ridership_2020-total_ridership_2019, percent_change = round(((change_in_ridership / total_ridership_2019) * 100), digits = 2), decrease = (percent_change &lt; 0))\n\n\nridership_NYC_2019_2020 |&gt;\n  DT::datatable(rownames = FALSE)\n\n\n\n\n\n\nnyc_change &lt;- round((sum(ridership_NYC_2019_2020$change_in_ridership) / sum(ridership_NYC_2019_2020$total_ridership_2019)) * 100, digits = 0)\n\nnyc_change\n\n[1] -56\n\n\nAs expected, all 5 modes of transportation (bus, bus rapid transit, commuter bus, demand response, and heavy rail) contributed to the overall -56% change in ridership in NYC from 2019 to 2020. During this time, many companies transitioned to remote work allowing employees to work from home and all students transitioned to virtual learning, avoiding travel and public transportation. Additionally, the fear of contracting and spreading the virus led more individuals who needed to travel to use personal vehicles rather than public transport. All of these factors contributed to the severe decrease in ridership in NYC’s transit system in 2020.\n\nridership_by_area_2020 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2020) |&gt;\n  group_by(metro_area) |&gt;\n  summarize(total_ridership = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nridership_by_area_2023 &lt;- USAGE_clean |&gt;\n  filter(year(month) == 2023) |&gt;\n  group_by(metro_area) |&gt;\n  summarize(total_ridership = sum(unlinked_passenger_trips)) |&gt;\n  ungroup()\n\nridership_2020_2023 &lt;- left_join(ridership_by_area_2020, ridership_by_area_2023, join_by(metro_area)) |&gt;\n  rename(total_ridership_2020 = total_ridership.x, total_ridership_2023 = total_ridership.y) |&gt;\n  mutate(change_in_ridership = total_ridership_2023-total_ridership_2020, percent_change = round(((change_in_ridership / total_ridership_2020) * 100), digits = 2), increase = (percent_change &gt;= 0))\n\nridership_2020_2023 |&gt;\n  DT::datatable(rownames = FALSE,\n                options = list(pageLength = 5))\n\n\n\n\n\n\npercentage_positive &lt;- ridership_2020_2023 |&gt;\n  drop_na() |&gt;\n  mutate(total = n()) |&gt;\n  group_by(increase, total) |&gt;\n  summarize(count = n()) |&gt;\n  mutate(percent = round((count / total)*100, digits = 0)) |&gt;\n  filter(increase == TRUE) |&gt;\n  pull(percent)\n\n`summarise()` has grouped output by 'increase'. You can override using the\n`.groups` argument.\n\npercentage_positive\n\n[1] 91\n\n\nOverall, it was interesting to observe the varying effects that COVID-19 had on US transit systems across different metropolitan areas. Each city reacted and adjusted to the global pandemic differently, which led to different patterns of changes in their respective transit systems. Although most transit systems experienced a severe drop in ridership during 2020, it is evident that most transit systems have progressed in the right direction, with approximately 91% of cities demonstrating an increase in ridership from 2020 to 2023."
  },
  {
    "objectID": "mp01.html#financial-and-ridership-analysis-major-transit-systems",
    "href": "mp01.html#financial-and-ridership-analysis-major-transit-systems",
    "title": "Mini Project #1: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "2022 Financial and Ridership Analysis (Major Transit Systems)",
    "text": "2022 Financial and Ridership Analysis (Major Transit Systems)\nSince the focus of the remaining analysis is on the financials and ridership of the US major transit systems in 2022, the table USAGE must be filtered for data in 2022 and then merged with the FINANCIALS table from earlier. Additionally, to filter for major transit systems, the new table USAGE_AND_FINANCIALS is filtered to only contain data with total unlinked passenger trips greater than 400,000.\n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  filter(year(month) == 2022) |&gt;\n  group_by(`NTD ID`, Agency, metro_area, Mode) |&gt;\n  summarize(UPT = sum(UPT), VRM = sum(VRM)) |&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'metro_area'. You can\noverride using the `.groups` argument.\n\n\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode = case_when(\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"SR\" ~ \"Streetcar\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway Transit\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"\n  ))\n\n\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, \n           FINANCIALS, \n           join_by(`NTD ID`, Mode)) |&gt;\n    drop_na()\n\n\nUSAGE_AND_FINANCIALS_major_transit &lt;- USAGE_AND_FINANCIALS |&gt;\n  filter(UPT &gt;= 400000)\n\nUSAGE_AND_FINANCIALS_major_transit |&gt;\n  DT::datatable(rownames = FALSE,\n                options = list(pageLength = 5))\n\n\n\n\n\nEfficiency involves optimizing productivity while minimizing expense. In the below analysis, I take a look at various efficiency metrics to determine which United States transit system was the most efficient in 2022.\n\n\n\n\n\n\nEfficiency Analysis:\n\n\n\nBelow are various metrics that can be used to describe the efficiency of transit systems:\n\nWhich transit system (agency and mode) had the most UPT in 2022?\nWhich transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\nWhich transit system (agency and mode) has the lowest expenses per UPT?\nWhich transit system (agency and mode) has the highest total fares per UPT?\nWhich transit system (agency and mode) has the lowest expenses per VRM?\nWhich transit system (agency and mode) has the highest total fares per VRM?\n\n\n\n\nQuestion #1\n\ntransit_system_most_UPT_agency &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  slice_max(UPT, n = 1) |&gt;\n  pull(Agency)\n\ntransit_system_most_UPT_agency\n\n[1] \"MTA New York City Transit\"\n\ntransit_system_most_UPT_mode &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  slice_max(UPT, n = 1) |&gt;\n  pull(Mode)\n\ntransit_system_most_UPT_mode\n\n[1] \"Heavy Rail\"\n\ntransit_system_most_UPT &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  slice_max(UPT, n = 1) |&gt;\n  pull(UPT)\n  \ntransit_system_most_UPT\n\n[1] 1793073801\n\n\nIn 2022, the transit system with the highest amount of unlinked passenger trips (UPT) of 1.79 billion was the MTA New York City Transit with the mode of transportation of Heavy Rail. Since MTA New York City Transit subway system is the largest in the US, it is clear that they would have the highest UPT among all major US transit systems.\n\n\nQuestion #2\n\nhighest_farebox_recovery_agency &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(farebox_recovery = `Total Fares` / Expenses) |&gt;\n  slice_max(farebox_recovery, n = 1) |&gt;\n  pull(Agency)\n\nhighest_farebox_recovery_agency\n\n[1] \"Port Imperial Ferry Corporation\"\n\nhighest_farebox_recovery_mode &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(farebox_recovery = `Total Fares` / Expenses) |&gt;\n  slice_max(farebox_recovery, n = 1) |&gt;\n  pull(Mode)\n\nhighest_farebox_recovery_mode\n\n[1] \"Ferryboat\"\n\nhighest_farebox_recovery &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(farebox_recovery = `Total Fares` / Expenses) |&gt;\n  slice_max(farebox_recovery, n = 1) |&gt;\n  pull(farebox_recovery)\n\nhighest_farebox_recovery\n\n[1] 1.428146\n\n\nThe transit system with the highest farebox recovery of 1.43 (ratio of total fares to expenses) in 2022 was Port Imperial Ferry Corporation with the mode of transportation of Ferryboat. It is interesting to see that the transit system with the highest farebox recovery is not a popular agency or mode most people would attribute “public transportation” as. However, it does show that efficient transit systems can exist anywhere in the US on any mode of transit.\n\n\nQuestion #3\n\nlowest_expenses_per_UPT_agency &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(expenses_per_UPT = Expenses / UPT) |&gt;\n  slice_min(expenses_per_UPT, n = 1) |&gt;\n  pull(Agency)\n\nlowest_expenses_per_UPT_agency\n\n[1] \"North Carolina State University\"\n\nlowest_expenses_per_UPT_mode &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(expenses_per_UPT = Expenses / UPT) |&gt;\n  slice_min(expenses_per_UPT, n = 1) |&gt;\n  pull(Mode)\n\nlowest_expenses_per_UPT_mode\n\n[1] \"Bus\"\n\nlowest_expenses_per_UPT &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(expenses_per_UPT = Expenses / UPT) |&gt;\n  slice_min(expenses_per_UPT, n = 1) |&gt;\n  pull(expenses_per_UPT)\n\nlowest_expenses_per_UPT\n\n[1] 1.17912\n\n\nThe transit system that had the lowest expenses per UPT (1.18) in 2022 was Bus from North Carolina State University. Although we do not have all the information about the cost of university transit, it is likely that such a large university is transporting sizeable amounts of students daily which could contribute to its low expense per UPT.\n\n\nQuestion #4\n\nhighest_fares_per_UPT_agency &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(fares_per_UPT = `Total Fares` / UPT) |&gt;\n  slice_max(fares_per_UPT, n = 1) |&gt;\n  pull(Agency)\n\nhighest_fares_per_UPT_agency\n\n[1] \"Hampton Jitney, Inc.\"\n\nhighest_fares_per_UPT_mode &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(fares_per_UPT = `Total Fares` / UPT) |&gt;\n  slice_max(fares_per_UPT, n = 1) |&gt;\n  pull(Mode)\n\nhighest_fares_per_UPT_mode\n\n[1] \"Commuter Bus\"\n\nhighest_fares_per_UPT &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(fares_per_UPT = `Total Fares` / UPT) |&gt;\n  slice_max(fares_per_UPT, n = 1) |&gt;\n  pull(fares_per_UPT)\n\nhighest_fares_per_UPT\n\n[1] 41.29628\n\n\nHampton Jitney, Inc. with the transit mode of Commuter Bus had the highest total fares per UPT of 41.3 in 2022. Since Hampton Jitney, Inc. is a commuter bus company that provides coach bus transportation, charter bus and tour bus options, it is likely that passengers are charged higher fares, leading to a high total fare per UPT.\n\n\nQuestion #5\n\nlowest_expenses_per_VRM_agency &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(expenses_per_VRM = Expenses / VRM) |&gt;\n  slice_min(expenses_per_VRM, n = 1) |&gt;\n  pull(Agency)\n\nlowest_expenses_per_VRM_agency\n\n[1] \"Metropolitan Transportation Commission\"\n\nlowest_expenses_per_VRM_mode &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(expenses_per_VRM = Expenses / VRM) |&gt;\n  slice_min(expenses_per_VRM, n = 1) |&gt;\n  pull(Mode)\n\nlowest_expenses_per_VRM_mode\n\n[1] \"Vanpool\"\n\nlowest_expenses_per_VRM &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(expenses_per_VRM = Expenses / VRM) |&gt;\n  slice_min(expenses_per_VRM, n = 1) |&gt;\n  pull(expenses_per_VRM)\n\nlowest_expenses_per_VRM\n\n[1] 0.4449998\n\n\nThe transit system with the lowest expenses per vehicle revenue mile (VRM) of 0.44 in 2022 was Vanpool from Metropolitan Transportation Commission. Since Vanpool is a form of transportation similar to rideshares, transporting a significantly less amount of people than typical mass transit in a smaller vehicle, the expenses required to operate and maintain it is likely significantly less. Thus, it is understandable that this mode of transportation would have the lowest expenses per VRM.\n\n\nQuestion #6\n\nhighest_fares_per_VRM_agency &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(fares_per_VRM = `Total Fares` / VRM) |&gt;\n  slice_max(fares_per_VRM, n = 1) |&gt;\n  pull(Agency)\n\nhighest_fares_per_VRM_agency\n\n[1] \"Jacksonville Transportation Authority\"\n\nhighest_fares_per_VRM_mode &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(fares_per_VRM = `Total Fares` / VRM) |&gt;\n  slice_max(fares_per_VRM, n = 1) |&gt;\n  pull(Mode)\n\nhighest_fares_per_VRM_mode\n\n[1] \"Ferryboat\"\n\nhighest_fares_per_VRM &lt;- USAGE_AND_FINANCIALS_major_transit |&gt;\n  mutate(fares_per_VRM = `Total Fares` / VRM) |&gt;\n  slice_max(fares_per_VRM, n = 1) |&gt;\n  pull(fares_per_VRM)\n\nhighest_fares_per_VRM\n\n[1] 157.7002\n\n\nLastly, Ferryboat from Jacksonville Transportation Authority had the highest total fares per vehicle revenue mile (VRM) of 157.7 in 2022. The Jacksonville Transportation Authority provides Ferryboat transportation not only for passengers but also charges extra for those who want to transport various vehicles which could contribute to the high fares per VRM."
  },
  {
    "objectID": "mp01.html#conclusion",
    "href": "mp01.html#conclusion",
    "title": "Mini Project #1: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Conclusion",
    "text": "Conclusion\nTransit system efficiency is subjective and can be measured with different metrics (highest UPT, highest farebox recovery, lowest expenses per UPT, highest total fares per UPT, lowest expenses per VRM, and highest total fares per VRM). Based on the above information, using the farebox recovery ratio, I found that the most efficient transit system in the country in 2022 was the Ferryboat from the Port Imperial Ferry Corporation. This transit system was able to maximize its total fares while minimizing their expenses leading to the highest farebox recovery ratio of 1.43.\nOverall, the National Transit Database provided a lot of useful and insightful data, allowing for a wide range of analysis. More specifically, it was interesting to explore historical transit data leading to thought-provoking insights as well as the various metrics to determine effective and efficient transportation in the United States. As the world continues to accelerate post-COVID, the major US public transit systems will continue to improve and create more efficient means of transportation for commuters around the nation."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Elissa",
    "section": "",
    "text": "Hello everyone, my name is Elissa!\nI am a curious graduate student at Baruch College with a passion for problem solving and tackling challenges through new experiences. I’m currently pursuing a Master of Science in Business Analytics with a concentration in Data Analytics in the Zicklin School of Business.\nI am also a recent graduate of Baruch College from the Baruch Scholars Honors program where I obtained a Bachelor of Arts in Mathematics and minored in Communication Studies.\n13 years ago, I discovered my first passion. Basketball has been a large part of my life for as long as I can remember. I have grown significantly since then, adapting to new team environments, learning to become a leader, and overcoming challenges. Four years ago, I was able to live out my dream of playing at the collegiate level for the Baruch Bearcats.\nThree summers ago, I tried something new and different. I had the opportunity of being a Microsoft Data Science Research fellow. Using R, I researched hands-on with large data sets, developed regression models, and created visualizations to analyze data. By the end of this program, I successfully collaborated on a research replication project, analyzing the effects of socioeconomic and mobility factors on Covid-19 positivity rates in New York City. Through this opportunity I found a new passion for data science, a bridge between my interests in mathematics and programming.\nAll these experiences have provided me with foundational skills to foster development in both my personal and professional growth. I hope to continue to explore all my passions and gain new experiences during my pursuit of data science and data analytics careers."
  }
]