---
title: "Mini Project #1: Fiscal Characteristics of Major US Public Transit Systems"
author: "Elissa Leung"
editor: visual
---

## Introduction

For this project, the goal is to explore different characteristics of the major public transit systems in the United States, based on data from the [National Transit Database](https://www.transit.dot.gov/ntd). More specifically, the analysis includes data from the [2022 Fare Revenue](https://www.transit.dot.gov/ntd/data-product/2022-annual-database-fare-revenues) table, the most recent [Monthly Ridership](https://www.transit.dot.gov/ntd/data-product/monthly-module-adjusted-data-release) table, and the [2022 Operating Expenses](https://www.transit.dot.gov/ntd/data-product/2022-operating-expenses) reports. By analyzing various statistics like the total amount of trips, total vehicle miles traveled, total revenues and expenses by source, I hope to answer various questions and determine the most efficient transit system in the United States.

## Data Cleaning

Before starting the analysis, the relevant data files need to be loaded and cleaned into data frames on R. Below consists of the code required to download the data files and create the relevant data frames by merging different tables. From the original data files four data frames are created: `FARES`, `EXPENSES`, `TRIPS`, and `MILES`. Following this, `FARES` and `EXPENSES` are merged into the `FINANCIALS` data frame and `TRIPS` and `MILES` are merged into the `USAGE` data frame. From this point forward, only the `USAGE` and `FINANCIALS` data frame will be necessary to conduct the analysis.

```{r}

if(!require("tidyverse")) install.packages("tidyverse")

# Let's start with Fare Revenue
library(tidyverse)
if(!file.exists("2022_fare_revenue.xlsx")){
    # This should work _in theory_ but in practice it's still a bit finicky
    # If it doesn't work for you, download this file 'by hand' in your
    # browser and save it as "2022_fare_revenue.xlsx" in your project
    # directory.
    download.file("http://www.transit.dot.gov/sites/fta.dot.gov/files/2024-04/2022%20Fare%20Revenue.xlsx", 
                  destfile="2022_fare_revenue.xlsx", 
                  quiet=FALSE, 
                  method="wget")
}
FARES <- readxl::read_xlsx("2022_fare_revenue.xlsx") |>
    select(-`State/Parent NTD ID`, 
           -`Reporter Type`,
           -`Reporting Module`,
           -`TOS`,
           -`Passenger Paid Fares`,
           -`Organization Paid Fares`) |>
    filter(`Expense Type` == "Funds Earned During Period") |>
    select(-`Expense Type`) |>
    group_by(`NTD ID`,       # Sum over different `TOS` for the same `Mode`
             `Agency Name`,  # These are direct operated and sub-contracted 
             `Mode`) |>      # of the same transit modality
                             # Not a big effect in most munis (significant DO
                             # tends to get rid of sub-contractors), but we'll sum
                             # to unify different passenger experiences
    summarize(`Total Fares` = sum(`Total Fares`)) |>
    ungroup()

# Next, expenses
if(!file.exists("2022_expenses.csv")){
    # This should work _in theory_ but in practice it's still a bit finicky
    # If it doesn't work for you, download this file 'by hand' in your
    # browser and save it as "2022_expenses.csv" in your project
    # directory.
    download.file("https://data.transportation.gov/api/views/dkxx-zjd6/rows.csv?date=20231102&accessType=DOWNLOAD&bom=true&format=true", 
                  destfile="2022_expenses.csv", 
                  quiet=FALSE, 
                  method="wget")
}
EXPENSES <- readr::read_csv("2022_expenses.csv") |>
    select(`NTD ID`, 
           `Agency`,
           `Total`, 
           `Mode`) |>
    mutate(`NTD ID` = as.integer(`NTD ID`)) |>
    rename(Expenses = Total) |>
    group_by(`NTD ID`, `Mode`) |>
    summarize(Expenses = sum(Expenses)) |>
    ungroup()

FINANCIALS <- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))
```

```{r}
# Monthly Transit Numbers
library(tidyverse)
if(!file.exists("ridership.xlsx")){
    # This should work _in theory_ but in practice it's still a bit finicky
    # If it doesn't work for you, download this file 'by hand' in your
    # browser and save it as "ridership.xlsx" in your project
    # directory.
    download.file("https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-09/July%202024%20Complete%20Monthly%20Ridership%20%28with%20adjustments%20and%20estimates%29_240903.xlsx", 
                  destfile="ridership.xlsx", 
                  quiet=FALSE, 
                  method="wget")
}
TRIPS <- readxl::read_xlsx("ridership.xlsx", sheet="UPT") |>
            filter(`Mode/Type of Service Status` == "Active") |>
            select(-`Legacy NTD ID`, 
                   -`Reporter Type`, 
                   -`Mode/Type of Service Status`, 
                   -`UACE CD`, 
                   -`TOS`) |>
            pivot_longer(-c(`NTD ID`:`3 Mode`), 
                            names_to="month", 
                            values_to="UPT") |>
            drop_na() |>
            mutate(month=my(month)) # Parse _m_onth _y_ear date specs
MILES <- readxl::read_xlsx("ridership.xlsx", sheet="VRM") |>
            filter(`Mode/Type of Service Status` == "Active") |>
            select(-`Legacy NTD ID`, 
                   -`Reporter Type`, 
                   -`Mode/Type of Service Status`, 
                   -`UACE CD`, 
                   -`TOS`) |>
            pivot_longer(-c(`NTD ID`:`3 Mode`), 
                            names_to="month", 
                            values_to="VRM") |>
            drop_na() |>
            group_by(`NTD ID`, `Agency`, `UZA Name`, 
                     `Mode`, `3 Mode`, month) |>
            summarize(VRM = sum(VRM)) |>
            ungroup() |>
            mutate(month=my(month)) # Parse _m_onth _y_ear date specs

USAGE <- inner_join(TRIPS, MILES) |>
    mutate(`NTD ID` = as.integer(`NTD ID`))
```

The code below checks for possible lingering null values in the `USAGE` and `FINANCIALS` data frames before conducting analysis. An output of 0 for each of the data frames ensures that there are no null values in these data frames.

```{r}

USAGE |>
  is.na() |>
  sum()

FINANCIALS |>
  is.na() |>
  sum()

```

The `USAGE` table (shown below) provides transit system information including (but not limited to): agency, mode of transportation, total unlinked passenger trips, and total vehicle revenue miles.

```{r}

if(!require("DT")) install.packages("DT")
library(DT)

sample_n(USAGE, 1000) |> 
  mutate(month=as.character(month)) |> 
  arrange(`NTD ID`, month) |>
  DT::datatable(rownames = FALSE, options = list(pageLength = 5))
```

```{r}

library(dplyr)
library(DT)
library(lubridate)

```

## Data Transformation

```{r}

USAGE <- USAGE |> 
  rename(metro_area = 'UZA Name')

```

```{r}

unique(USAGE$Mode)

```

### Task #2

```{r}

USAGE <- USAGE |>
  mutate(Mode = case_when(
    Mode == "DR" ~ "Demand Response",
    Mode == "FB" ~ "Ferryboat",
    Mode == "MB" ~ "Bus",
    Mode == "SR" ~ "Streetcar",
    Mode == "TB" ~ "Trolleybus",
    Mode == "VP" ~ "Vanpool",
    Mode == "CB" ~ "Commuter Bus",
    Mode == "RB" ~ "Bus Rapid Transit",
    Mode == "LR" ~ "Light Rail",
    Mode == "YR" ~ "Hybrid Rail",
    Mode == "MG" ~ "Monorail/Automated Guideway Transit",
    Mode == "CR" ~ "Commuter Rail",
    Mode == "AR" ~ "Alaska Railroad",
    Mode == "TR" ~ "Aerial Tramways",
    Mode == "HR" ~ "Heavy Rail",
    Mode == "IP" ~ "Inclined Plane",
    Mode == "PB" ~ "Publico",
    Mode == "CC" ~ "Cable Car",
    TRUE ~ "Unknown"
  ))

```

```{r}

USAGE_clean <- USAGE |> 
  select(-`NTD ID`, -`3 Mode`) |> 
  rename(unlinked_passenger_trips = UPT, vehicle_revenue_miles = VRM)
```

```{r}
sample_n(USAGE_clean, 1000) |> 
    mutate(month=as.character(month)) |> 
    DT::datatable(rownames = FALSE)
```

### TASK #3

#### Question #1: What transit agency had the most total VRM in this sample?

```{r}

transit_agency_max_total_VRM <- 
  USAGE_clean |>
  group_by(Agency) |>
  summarize(total_VRM = sum(vehicle_revenue_miles)) |>
  slice_max(total_VRM, n = 1) |>
  pull(Agency)

transit_agency_max_total_VRM

```

The transit agency that had the most total vehicle revenue miles in the sample was `{r} transit_agency_max_total_VRM` .

#### **Question #2: What transit mode had the most total VRM in this sample?**

```{r}

transit_mode_max_total_VRM <- 
  USAGE_clean |>
  group_by(Mode) |>
  summarize(total_VRM = sum(vehicle_revenue_miles)) |>
  slice_max(total_VRM, n = 1) |>
  pull(Mode)

transit_mode_max_total_VRM
```

The transit mode with the most total vehicle revenue miles in this sample was `{r} transit_mode_max_total_VRM` .

#### Question #3: How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?

```{r}

total_trips_NYC_subway <- 
  USAGE_clean |>
  filter(Agency == "MTA New York City Transit", Mode == "Heavy Rail", year(month) == 2024, month(month) == 5) |>
  summarize(total_trips = sum(unlinked_passenger_trips)) |>
  pull(total_trips)

total_trips_NYC_subway

```

There were `{r} total_trips_NYC_subway` total trips taken on the New York City Subway in May 2024.

#### Question #5: How much did NYC subway ridership fall between April 2019 and April 2020?

```{r}

ridership_drop_NYC_april <- USAGE_clean |>
  filter(Agency == "MTA New York City Transit", Mode == "Heavy Rail", month(month)==4) |>
  filter((year(month)==2019) | (year(month)==2020)) |>
  group_by(year = year(month)) |>
  summarize(total_ridership = sum(unlinked_passenger_trips)) |>
  arrange(year) |>
  summarize(ridership_drop = first(total_ridership)-last(total_ridership)) |>
  pull(ridership_drop)

ridership_drop_NYC_april
```

From April 2019 to April 2020, the NYC subway ridership fell by `{r} ridership_drop_NYC_april`.

### Task #4:

After analyzing the above statistics from the monthly ridership table, I wanted to find some additional information. **\[ADD MORE STUFF HERE\]**

Several years ago, in 2020, the world experienced a global outbreak of COVID-19, impacting local and international economies. This event encouraged social distancing and prevented any significant travel for citizens besides essential workers. I was curious to see how our national transit systems were affected by this global event. More specifically, I wanted to explore the ridership changes for the various metro areas included in the national ridership data set. I created a data frame with the total ridership of each metro area in this time frame, then calculated the percent change of ridership from 2019 to 2020. I expected to find a decrease in ridership in all the cities from 2019 to 2020 and wanted to explore which cities were negatively impacted the most and least.

```{r}

ridership_by_area_2019 <- USAGE_clean |>
  filter(year(month) == 2019) |>
  group_by(metro_area) |>
  summarize(total_ridership = sum(unlinked_passenger_trips)) |>
  ungroup()

ridership_by_area_2020 <- USAGE_clean |>
  filter(year(month) == 2020) |>
  group_by(metro_area) |>
  summarize(total_ridership = sum(unlinked_passenger_trips)) |>
  ungroup()

ridership_2019_2020 <- left_join(ridership_by_area_2019, ridership_by_area_2020, join_by(metro_area)) |>
  rename(total_ridership_2019 = total_ridership.x, total_ridership_2020 = total_ridership.y) |>
  mutate(change_in_ridership = total_ridership_2020-total_ridership_2019, percent_change = round(((change_in_ridership / total_ridership_2019) * 100), digits = 2), decrease = (percent_change < 0))

```

```{r}

ridership_2019_2020 |> 
    DT::datatable(rownames = FALSE)

```

```{r}

greatest_ridership_drop_place <- ridership_2019_2020 |>
  slice_min(percent_change, n=1) |>
  pull(metro_area)

greatest_ridership_drop_percent <- ridership_2019_2020 |>
  slice_min(percent_change, n=1) |>
  pull(percent_change)

greatest_ridership_drop_place
greatest_ridership_drop_percent

```

After looking through the data, I found that the city with the greatest ridership drop from 2019 to 2020 was `{r} greatest_ridership_drop_place` with a percentage change of `{r} greatest_ridership_drop_percent`%.

Furthermore, I wanted to explore more about the ridership in `{r} greatest_ridership_drop_place` and analyze the breakdown of ridership by mode of transportation.

```{r}

ridership_Rome_GA_2019 <- USAGE_clean |>
  filter(year(month) == 2019, metro_area == "Rome, GA") |>
  group_by(Mode) |>
  summarize(total_ridership = sum(unlinked_passenger_trips)) |>
  ungroup()

ridership_Rome_GA_2020 <- USAGE_clean |>
  filter(year(month) == 2020, metro_area == "Rome, GA") |>
  group_by(Mode) |>
  summarize(total_ridership = sum(unlinked_passenger_trips)) |>
  ungroup()

ridership_Rome_GA_2019_2020 <- left_join(ridership_Rome_GA_2019, ridership_Rome_GA_2020, join_by(Mode)) |>
  rename(total_ridership_2019 = total_ridership.x, total_ridership_2020 = total_ridership.y) |>
  mutate(change_in_ridership = total_ridership_2020-total_ridership_2019, percent_change = round(((change_in_ridership / total_ridership_2019) * 100), digits = 2), decrease = (percent_change < 0))

ridership_Rome_GA_2019_2020 |>
  DT::datatable(rownames = FALSE)

```

From this table above, I observed that there were only two recorded modes of transportation from `{r} greatest_ridership_drop_place`: bus and demand response. The bus ridership changed by `{r} ridership_Rome_GA_2019_2020 |> filter(Mode == "Bus") |> pull(percent_change)` %, while the demand response ridership changed by `{r} ridership_Rome_GA_2019_2020 |> filter(Mode == "Demand Response") |> pull(percent_change)` %.

Additionally, I was curious to see which city's ridership was impacted the least.

```{r}

positive_change <- ridership_2019_2020 |>
  filter(decrease == FALSE)

positive_change_cities <- positive_change$metro_area

positive_change_cities

```

```{r}

least_ridership_drop_place <- ridership_2019_2020 |>
  slice_max(percent_change, n=1) |>
  pull(metro_area)

least_ridership_drop_percent <- ridership_2019_2020 |>
  slice_max(percent_change, n=1) |>
  pull(percent_change)

least_ridership_drop_place
```

When exploring this question, contrary to my original assumption, I found that there were multiple cities that actually **increased** their ridership from 2019 to 2020. These cities were `{r} positive_change_cities`. The city with the lowest ridership drop (in other words, with the highest increase in ridership) was `{r} least_ridership_drop_place` with a percent change of +`{r} least_ridership_drop_percent`%.

I curious about which mode of transportation contributed to the increase in ridership in `{r} least_ridership_drop_place` from 2019 to 2020.

```{r}

ridership_Victoria_TX_2019 <- USAGE_clean |>
  filter(year(month) == 2019, metro_area == "Victoria, TX") |>
  group_by(Mode) |>
  summarize(total_ridership = sum(unlinked_passenger_trips)) |>
  ungroup()

ridership_Victoria_TX_2020 <- USAGE_clean |>
  filter(year(month) == 2020, metro_area == "Victoria, TX") |>
  group_by(Mode) |>
  summarize(total_ridership = sum(unlinked_passenger_trips)) |>
  ungroup()

ridership_Victoria_TX_2019_2020 <- left_join(ridership_Victoria_TX_2019, ridership_Victoria_TX_2020, join_by(Mode)) |>
  rename(total_ridership_2019 = total_ridership.x, total_ridership_2020 = total_ridership.y) |>
  mutate(change_in_ridership = total_ridership_2020-total_ridership_2019, percent_change = round(((change_in_ridership / total_ridership_2019) * 100), digits = 2), decrease = (percent_change < 0))

ridership_Victoria_TX_2019_2020

```

There was an increase in ridership for all modes of transportation recorded in Victoria, TX. Bus had percent change of +`{r} ridership_Victoria_TX_2019_2020 |> filter(Mode == "Bus") |> pull(percent_change)`%. Commuter bus had a percent change of +`{r} ridership_Victoria_TX_2019_2020 |> filter(Mode == "Commuter Bus") |> pull(percent_change)`%. While demand response had a percent change of +`{r} ridership_Victoria_TX_2019_2020 |> filter(Mode == "Demand Response") |> pull(percent_change)`%. All three modes of transportation contributed to the overall increase of ridership in Victoria, TX from 2019 to 2020.

Being that New York City has one of the largest transit systems in the world and the largest in the United States, the Metropolitan Transit Authority (MTA), I was curious to see the changes the city's transit system experienced from 2019 to 2020.

```{r}

ridership_NYC_2019 <- USAGE_clean |>
  filter(year(month) == 2019, Agency == "MTA New York City Transit") |>
  group_by(Mode) |>
  summarize(total_ridership = sum(unlinked_passenger_trips)) |>
  ungroup()

ridership_NYC_2020 <- USAGE_clean |>
  filter(year(month) == 2020, Agency == "MTA New York City Transit") |>
  group_by(Mode) |>
  summarize(total_ridership = sum(unlinked_passenger_trips)) |>
  ungroup()

ridership_NYC_2019_2020 <- left_join(ridership_NYC_2019, ridership_NYC_2020, join_by(Mode)) |>
  rename(total_ridership_2019 = total_ridership.x, total_ridership_2020 = total_ridership.y) |>
  mutate(change_in_ridership = total_ridership_2020-total_ridership_2019, percent_change = round(((change_in_ridership / total_ridership_2019) * 100), digits = 2), decrease = (percent_change < 0))


ridership_NYC_2019_2020 |>
  DT::datatable(rownames = FALSE)


```

# \[write something here about the NYC transit stuff\]

### Task #5

Preparing USAGE and FINANCIALS tables for merging.

```{r}

USAGE_2022_ANNUAL <- USAGE |>
  filter(year(month) == 2022) |>
  group_by(`NTD ID`, Agency, metro_area, Mode) |>
  summarize(UPT = sum(UPT), VRM = sum(VRM)) |>
  ungroup()

```

```{r}

FINANCIALS <- FINANCIALS |>
  mutate(Mode = case_when(
    Mode == "DR" ~ "Demand Response",
    Mode == "FB" ~ "Ferryboat",
    Mode == "MB" ~ "Bus",
    Mode == "SR" ~ "Streetcar",
    Mode == "TB" ~ "Trolleybus",
    Mode == "VP" ~ "Vanpool",
    Mode == "CB" ~ "Commuter Bus",
    Mode == "RB" ~ "Bus Rapid Transit",
    Mode == "LR" ~ "Light Rail",
    Mode == "YR" ~ "Hybrid Rail",
    Mode == "MG" ~ "Monorail/Automated Guideway Transit",
    Mode == "CR" ~ "Commuter Rail",
    Mode == "AR" ~ "Alaska Railroad",
    Mode == "TR" ~ "Aerial Tramways",
    Mode == "HR" ~ "Heavy Rail",
    Mode == "IP" ~ "Inclined Plane",
    Mode == "PB" ~ "Publico",
    Mode == "CC" ~ "Cable Car",
    TRUE ~ "Unknown"
  ))

```

```{r}

USAGE_AND_FINANCIALS <- left_join(USAGE_2022_ANNUAL, 
           FINANCIALS, 
           join_by(`NTD ID`, Mode)) |>
    drop_na()

```

### Task #6

Efficiency is optimizing productivity while minimizing wasted effort or expense. In this analysis, I take a look at various efficiency metrics to determine which United States transit system was the most **efficient** in 2022.

```{r}

USAGE_AND_FINANCIALS_major_transit <- USAGE_AND_FINANCIALS |>
  filter(UPT >= 400000)

```

#### Question #1

Which transit system (agency and mode) had the most UPT in 2022?

```{r}

transit_system_most_UPT <- USAGE_AND_FINANCIALS_major_transit |>
  slice_max(UPT, n = 1) |>
  pull(Agency, Mode)

print(transit_system_most_UPT)
  

```

The transit system with the most UPT in 2022 was `{r} transit_system_most_UPT`.

#### Question #2

Which transit system (agency and mode) had the highest *farebox recovery*, defined as the highest ratio of Total Fares to Expenses?

```{r}

highest_farebox_recovery <- USAGE_AND_FINANCIALS_major_transit |>
  mutate(farebox_recovery = `Total Fares` / Expenses) |>
  slice_max(farebox_recovery, n = 1) |>
  pull(Agency, Mode)

print(highest_farebox_recovery)

```

The transit system with the highest farebox recovery (ratio of total fares to expenses) in 2022 was `{r} highest_farebox_recovery`.

#### Question #3

Which transit system (agency and mode) has the lowest expenses per UPT?

```{r}

lowest_expenses_per_UPT <- USAGE_AND_FINANCIALS_major_transit |>
  mutate(expenses_per_UPT = Expenses / UPT) |>
  slice_min(expenses_per_UPT, n = 1) |>
  pull(Agency, Mode)

print(lowest_expenses_per_UPT)

```

The transit system that had the lowest expenses per UPT in 2022 was `{r} lowest_expenses_per_UPT`.

#### Question #4

Which transit system (agency and mode) has the highest total fares per UPT?

```{r}

highest_fares_per_UPT <- USAGE_AND_FINANCIALS_major_transit |>
  mutate(fares_per_UPT = `Total Fares` / UPT) |>
  slice_max(fares_per_UPT, n = 1) |>
  pull(Agency, Mode)

print(highest_fares_per_UPT)

```

`{r} highest_fares_per_UPT` had the highest total fares per UPT in 2022.

#### Question #5

Which transit system (agency and mode) has the lowest expenses per VRM?

```{r}

lowest_expenses_per_VRM <- USAGE_AND_FINANCIALS_major_transit |>
  mutate(expenses_per_VRM = Expenses / VRM) |>
  slice_min(expenses_per_VRM, n = 1) |>
  pull(Agency, Mode)

print(lowest_expenses_per_VRM)

```

The transit system with the lowest expenses per VRM in 2022 was `{r} lowest_expenses_per_VRM`.

#### Question #6

Which transit system (agency and mode) has the highest total fares per VRM?

```{r}

highest_fares_per_VRM <- USAGE_AND_FINANCIALS_major_transit |>
  mutate(fares_per_VRM = `Total Fares` / VRM) |>
  slice_max(fares_per_VRM, n = 1) |>
  pull(Agency, Mode)

print(highest_fares_per_VRM)

```

Lastly, `{r} highest_fares_per_VRM` had the highest total fares per VRM in 2022.

Transit System efficiency is subjective and can be measured with different metrics (highest UPT, highest farebox recovery, lowest expenses per UPT, highest total fares per UPT, lowest expenses per VRM, and highest total fares per VRM). Based on the above information, using the farebox recovery ratio, I found that the most efficient transit system in the country in 2022 was the **Transit Authority of Central Kentucky** with a mode of transportation of **Vanpool**. This transit system was able to maximize its total fares while minimizing their expenses leading to the highest farebox recovery ratio.
